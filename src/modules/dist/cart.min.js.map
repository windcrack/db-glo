{"version":3,"sources":["cart.js"],"names":["_renderCart","_interopRequireDefault","require","_postData","cart","display","cartModal","localStorage","JSON","parse","getItem","cartTotal","textContent","goodItem","price","length","setItem","closeCart","document","querySelector","cartClose","cartSendBtn","goodsWrapper","cartWrapper","counter","cartCount","sum","addEventListener","style","event","target","classList","contains","closest","goods","find","item","id","key","stringify","dataset","index","findIndex","push","splice","reduce","then","removeItem"],"mappings":"2FAAA,IAAAA,YAAAC,uBAAAC,QAAA,iBACAC,UAAAF,uBAAAC,QAAA,uFAEA,IAAME,KAAO,WAYWC,SAAhBC,IACA,IAAAF,EAAAG,aAAWH,QAAX,QAAAI,KAAAC,MAAAF,aAAAG,QAAA,SAAA,GACA,EAAAC,EAAUC,OACNL,aAAcM,QAASC,YAAvBV,EAAAW,QALRR,aAAAS,QAAA,YAAA,GAQMC,EAASL,YAATK,aAAiBP,QAAA,aAjBvB,IAAMN,EAAOc,SAASC,cAAc,SAC9Bb,EAAYY,SAASC,cAAc,SACnCC,EAAYd,EAAUa,cAAc,eAN9CR,EAAAL,EAAAa,cAAA,sBAQUE,EAAcf,EAAUa,cAAc,iBAPhDG,EAAAJ,SAAAC,cAAA,UASUI,EAAcL,SAASC,cAAc,iBACrCK,EAAUN,SAASC,cAAc,YAwBvCM,IATIrB,EAAMA,iBAAOG,QAvBR,WACHH,IAAOc,EAAQX,aAACY,QAAc,QAApCX,KAAAC,MAAAF,aAAAG,QAAA,SAAA,GACMJ,EAAYY,MAAAA,QAASC,QACrBC,EAAAA,YAAAA,SAAYd,GACZK,EAAYL,YAAUa,EAAAA,OAAc,SAAAO,EAAAb,GACpCQ,OAAWK,EAAGpB,EAAUa,OACxBG,KA6BNF,EAAUO,iBAAiB,QA3BXT,WAWZZ,EAAUsB,MAAMvB,QAAU,KAMtBE,EAAAA,iBAAqB,QAAaH,SAAIyB,GAD1C,IAEKC,EAAAD,EAAAC,OAEJ,GAAAA,EAAAC,UAAAC,SAAA,eAAA,CAaG,IAZIpB,EAYSkB,EAAOG,QAAQ,SAZV1B,QAAAA,IAP1B2B,EAAA1B,KAAAC,MAAAF,aAAAG,QAAA,UAsBcN,EAAOG,aAAaG,QAAQ,QAAUF,KAAKC,MAAMF,aAAaG,QAAQ,SAAW,GAZtFG,EAAAqB,EAAAC,KAAA,SAAAC,GAAA,OAAAA,EAAAC,MAAAC,IAGCX,EAAAA,KAAAA,GAGFG,aAAeA,QAAnB,OAAAtB,KAAA+B,UAAAnC,IAYIqB,OAPAF,EAAWI,iBAAapB,QAAaG,SAAAA,GAYzC,IAAIoB,EAASD,EAAMC,OAEnB,GAbiBvB,EAAAA,UAAaG,SAAQ,cAa/B,CAZGG,IAAQT,EAAG8B,aAAWxB,QAAI,QAAAF,KAAAC,MAAAF,aAAAG,QAAA,SAAA,GAAhC4B,EAAoCR,EAAJG,QAAA,SAAhCO,QAAAF,IAgBMG,EAAQrC,EAAKsC,UAAU,SAACN,GAdzBO,OAAK9B,EAAVwB,MAAAC,IAGAb,EAASmB,OAAAH,EAAA,GAbjBlC,aAAAS,QAAA,OAAAR,KAAA+B,UAAAnC,IAiBAmB,KACQO,EAAAA,YAAAA,SAAeA,GACZnB,EAAUoB,YAAUC,EAASa,OAAA,SAAAnB,EAApCb,GAeQ,OAAOa,EAAOb,EAASC,OAdxB,MAoBXO,EAAYM,iBAAiB,QAAS,WAhB9B,IAAMc,EAAQrC,aAAAM,QAAe,QAAUF,KAAAC,MAAAF,aAAAG,QAAA,SAAA,IAAvC,EAAAP,UAAA,SAAAC,GAAA0C,KAAA,WAoBAvC,aAAawC,WAAW,SAhBpB,EAAA/C,YAAA,SAAQyC,IAkBZhB,IAhBAlB,EAAaS,YAAgBR,gBAG7BJ","file":"cart.min.js","sourcesContent":["import renderCart from \"./renderCart\";\nimport postData from \"./postData\";\n\nconst cart = () =>{\n    const cart = document.querySelector('#cart');\n    const cartModal = document.querySelector('.cart');\n    const cartClose = cartModal.querySelector('.cart-close');\n    const cartTotal = cartModal.querySelector('.cart-total > span');\n    const cartSendBtn = cartModal.querySelector('.cart-confirm');\n    const goodsWrapper = document.querySelector('.goods');\n    const cartWrapper = document.querySelector('.cart-wrapper');\n    const counter = document.querySelector('.counter');\n    \n    const openCart = () =>{\n        const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n        cartModal.style.display = 'flex';\n        renderCart(cart);\n        cartTotal.textContent = cart.reduce((sum, goodItem) => {\n            return sum += goodItem.price;\n        }, 0);\n    }\n    const closeCart = () =>{\n        cartModal.style.display = '';\n    }\n\n    const cartCount = () =>{\n        const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n        if(cart.length > 0){\n            localStorage.setItem('cartCount', cart.length);\n        }else{\n            localStorage.setItem('cartCount', 0);\n        }\n        counter.textContent = localStorage.getItem('cartCount');\n    }\n\n    cartCount();\n\n    cart.addEventListener('click', openCart);\n    cartClose.addEventListener('click', closeCart);\n\n    goodsWrapper.addEventListener('click', (event) =>{\n        let target = event.target;\n\n        if(target.classList.contains('btn-primary')){\n            const card = target.closest('.card');\n            const key = card.dataset.key;\n            const goods =JSON.parse(localStorage.getItem('goods'));\n            const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n            const goodItem = goods.find(item => item.id === +key);\n\n            cart.push(goodItem);\n            \n            localStorage.setItem('cart', JSON.stringify(cart));\n            cartCount();\n        }\n    })\n\n    cartWrapper.addEventListener('click', event =>{\n        let target = event.target;\n        let btn = target.classList.contains('btn-danger');\n        if(btn){\n            const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n            const card = target.closest('.card');\n            const key = card.dataset.key;\n            const index = cart.findIndex((item) => {\n              return item.id === +key;\n            });\n\n            cart.splice(index, 1);\n\n            localStorage.setItem('cart', JSON.stringify(cart));\n            cartCount();\n            renderCart(cart);\n            cartTotal.textContent = cart.reduce((sum, goodItem) => {\n                return sum += goodItem.price;\n            }, 0);\n            \n        }\n    })\n\n    cartSendBtn.addEventListener('click', () =>{\n        const cart = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n\n        postData(cart).then(() =>{\n            localStorage.removeItem('cart');\n            renderCart([]);\n            cartCount();\n            cartTotal.textContent = 0;\n        });\n    })\n}\n\nexport default cart;"]}